{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\15980\\\\Downloads\\\\gpt\\\\alfred-chatbot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Good evening, Master Wayne. How may I assist you?\",\n    sender: \"Alfred\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (input.trim()) {\n      const userMessage = {\n        text: input,\n        sender: \"User\"\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n      setInput(\"\");\n      try {\n        // Send the user's message to the backend\n        const response = await axios.post('http://localhost:5000/chat', {\n          message: input\n        });\n\n        // Alfred's response from the backend\n        const alfredResponse = {\n          text: response.data.response,\n          sender: \"Alfred\"\n        };\n\n        // Add Alfred's response to the chat\n        setMessages(prevMessages => [...prevMessages, alfredResponse]);\n      } catch (error) {\n        console.error(\"Error communicating with Alfred's server:\", error);\n      }\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: \"Alfred - Your Personal Butler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${message.sender === 'Alfred' ? 'alfred' : 'user'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-sender\",\n          children: message.sender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dQJneampE5ezU2j4aOuuWfQHpWM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","App","_s","messages","setMessages","text","sender","input","setInput","messagesEndRef","scrollToBottom","handleSendMessage","trim","userMessage","prevMessages","response","post","message","alfredResponse","data","error","console","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","ref","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/15980/Downloads/gpt/alfred-chatbot/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    { text: \"Good evening, Master Wayne. How may I assist you?\", sender: \"Alfred\" },\n  ]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSendMessage = async () => {\n    if (input.trim()) {\n      const userMessage = { text: input, sender: \"User\" };\n      setMessages((prevMessages) => [...prevMessages, userMessage]);\n      setInput(\"\");\n\n      try {\n        // Send the user's message to the backend\n        const response = await axios.post('http://localhost:5000/chat', { message: input });\n\n        // Alfred's response from the backend\n        const alfredResponse = { text: response.data.response, sender: \"Alfred\" };\n\n        // Add Alfred's response to the chat\n        setMessages((prevMessages) => [...prevMessages, alfredResponse]);\n      } catch (error) {\n        console.error(\"Error communicating with Alfred's server:\", error);\n      }\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">Alfred - Your Personal Butler</div>\n      <div className=\"chat-body\">\n        {messages.map((message, index) => (\n          <div key={index} className={`chat-message ${message.sender === 'Alfred' ? 'alfred' : 'user'}`}>\n            <div className=\"message-sender\">{message.sender}</div>\n            <div className=\"message-text\">{message.text}</div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"chat-footer\">\n        <input\n          type=\"text\"\n          placeholder=\"Type a message...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === 'Enter' && handleSendMessage()}\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}